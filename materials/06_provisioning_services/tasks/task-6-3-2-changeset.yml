Parameters:
  VPCName:
    Description: The name of the VPC
    Type: String
    Default: lab-6-3
  EnvironmentName:
    Description: task2
    Type: String
    Default: lab-6-3
  BucketName:
    Description: lab-6-3
    Type: String
    Default: lab-6-3
  MyIP:
    Description: "Allow SSH traffic from this IP. Enter your current external IP in format x.x.x.x/xx"
    Type: "String"  
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.20.0.0/16
    Public0:
      CIDR: 10.20.0.0/24
    Public1:
      CIDR: 10.20.1.0/24
    Private0:
      CIDR: 10.20.2.0/24
    Private1:
      CIDR: 10.20.3.0/24
Resources:
  InstanceSecurityGroup: 
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      VpcId: 
        Ref: VPC
      GroupDescription: "Enable SSH access via port 22 and open 80 port"
      SecurityGroupIngress: 
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: 
            Ref: "MyIP"
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: 
            Ref: "MyIP"
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - VPC
          - CIDR
      Tags:
        - Key: Name
          Value: lab-6-3
  PublicSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Public0
          - CIDR
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Public (AZ1)
        - Key: Network
          Value: Public
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Public1
          - CIDR
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
        - Key: Network
          Value: Public
  PrivateSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Private0
          - CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
        - Key: Network
          Value: Private
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Private1
          - CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
        - Key: Network
          Value: Private
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId:
        Ref: VPC
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: lab-6-3